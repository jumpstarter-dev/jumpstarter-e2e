name: 'Jumpstarter end-to-end testing'
inputs:
  controller-ref:
    description: 'jumpstarter-dev/jumpstarter-controller git ref'
    required: true
  jumpstarter-ref:
    description: 'jumpstarter-dev/jumpstarter git ref'
    required: true
runs:
  using: "composite"
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    - name: Install python
      shell: bash
      run: |
        uv python install 3.12
    - name: Checkout jumpstarter controller
      uses: actions/checkout@v4
      with:
        repository: jumpstarter-dev/jumpstarter-controller
        ref: ${{ inputs.controller-ref }}
        path: controller
    - name: Checkout jumpstarter
      uses: actions/checkout@v4
      with:
        repository: jumpstarter-dev/jumpstarter
        ref: ${{ inputs.jumpstarter-ref }}
        path: jumpstarter
    - name: Deploy dex
      shell: bash
      run: |
        go run github.com/cloudflare/cfssl/cmd/cfssl@latest gencert -initca "$GITHUB_ACTION_PATH"/ca-csr.json | \
          go run github.com/cloudflare/cfssl/cmd/cfssljson@latest -bare ca -
        go run github.com/cloudflare/cfssl/cmd/cfssl@latest gencert -ca=ca.pem -ca-key=ca-key.pem \
          -config="$GITHUB_ACTION_PATH"/ca-config.json -profile=www "$GITHUB_ACTION_PATH"/dex-csr.json | \
          go run github.com/cloudflare/cfssl/cmd/cfssljson@latest -bare server

        cp "$GITHUB_ACTION_PATH"/kind_cluster.yaml ./controller/hack/kind_cluster.yaml
        make -C controller cluster

        kubectl create namespace dex
        kubectl -n dex create secret tls dex-tls \
          --cert=server.pem \
          --key=server-key.pem

        go run github.com/mikefarah/yq/v4@latest -i \
          '.jumpstarter-controller.config.authentication.jwt[0].issuer.certificateAuthority = load_str("ca.pem")' \
          "$GITHUB_ACTION_PATH"/values.kind.yaml

        # important!
        kubectl create clusterrolebinding oidc-reviewer  \
         --clusterrole=system:service-account-issuer-discovery \
         --group=system:unauthenticated

        helm repo add dex https://charts.dexidp.io
        helm install --namespace dex --wait -f "$GITHUB_ACTION_PATH"/dex.values.yaml dex dex/dex

        sudo cp ca.pem /usr/local/share/ca-certificates/dex.crt
        sudo update-ca-certificates

        echo "127.0.0.1 dex.dex.svc.cluster.local" | sudo tee -a /etc/hosts
    - name: Deploy jumpstarter controller
      shell: bash
      run: |
        cp "$GITHUB_ACTION_PATH"/values.kind.yaml ./controller/deploy/helm/jumpstarter/values.kind.yaml
        make -C controller deploy
    - name: Install jumpstarter
      shell: bash
      run: |
        uv venv
        uv pip install \
          ./jumpstarter/packages/jumpstarter-cli \
          ./jumpstarter/packages/jumpstarter-driver-composite \
          ./jumpstarter/packages/jumpstarter-driver-power \
          ./jumpstarter/packages/jumpstarter-driver-opendal
    - name: Run jumpstarter
      shell: bash
      run: |
        ENDPOINT=$(helm get values jumpstarter --output json | jq -r '."jumpstarter-controller".grpc.endpoint')

        sudo mkdir -p /etc/jumpstarter/exporters
        sudo chown $USER /etc/jumpstarter/exporters

        . .venv/bin/activate

        export JUMPSTARTER_GRPC_INSECURE=1

        kubectl create -n default sa test-client-sa
        kubectl create -n default sa test-exporter-sa

        jmp admin create client   test-client-oidc     --unsafe --out /dev/null \
          --oidc-username dex:test-client-oidc
        jmp admin create client   test-client-sa       --unsafe --out /dev/null \
          --oidc-username dex:system:serviceaccount:default:test-client-sa
        jmp admin create client   test-client-legacy   --unsafe --save

        jmp admin create exporter test-exporter-oidc   --out /dev/null \
          --oidc-username dex:test-exporter-oidc \
          --label example.com/board oidc
        jmp admin create exporter test-exporter-sa     --out /dev/null \
          --oidc-username dex:system:serviceaccount:default:test-exporter-sa \
          --label example.com/board sa
        jmp admin create exporter test-exporter-legacy --save \
          --label example.com/board legacy

        jmp client   config list
        jmp exporter config list

        jmp client   login test-client-oidc \
          --endpoint "$ENDPOINT" --namespace default --name test-client-oidc \
          --issuer https://dex.dex.svc.cluster.local:5556 \
          --username test-client-oidc@example.com --password password --unsafe

        jmp client   login test-client-sa \
          --endpoint "$ENDPOINT" --namespace default --name test-client-sa \
          --issuer https://dex.dex.svc.cluster.local:5556 \
          --connector-id kubernetes \
          --token $(kubectl create -n default token test-client-sa) --unsafe

        jmp exporter login test-exporter-oidc \
          --endpoint "$ENDPOINT" --namespace default --name test-exporter-oidc \
          --issuer https://dex.dex.svc.cluster.local:5556 \
          --username test-exporter-oidc@example.com --password password

        jmp exporter login test-exporter-sa \
          --endpoint "$ENDPOINT" --namespace default --name test-exporter-sa \
          --issuer https://dex.dex.svc.cluster.local:5556 \
          --connector-id kubernetes \
          --token $(kubectl create -n default token test-exporter-sa)

        go run github.com/mikefarah/yq/v4@latest -i ". * load(\"$GITHUB_ACTION_PATH/exporter.yaml\")" \
          /etc/jumpstarter/exporters/test-exporter-oidc.yaml
        go run github.com/mikefarah/yq/v4@latest -i ". * load(\"$GITHUB_ACTION_PATH/exporter.yaml\")" \
          /etc/jumpstarter/exporters/test-exporter-sa.yaml
        go run github.com/mikefarah/yq/v4@latest -i ". * load(\"$GITHUB_ACTION_PATH/exporter.yaml\")" \
          /etc/jumpstarter/exporters/test-exporter-legacy.yaml

        jmp client   config list
        jmp exporter config list

        jmp exporter run test-exporter-oidc &
        jmp exporter run test-exporter-sa &
        jmp exporter run test-exporter-legacy &

        kubectl -n default wait --for=condition=Online exporters.jumpstarter.dev/test-exporter-oidc
        kubectl -n default wait --for=condition=Online exporters.jumpstarter.dev/test-exporter-sa
        kubectl -n default wait --for=condition=Online exporters.jumpstarter.dev/test-exporter-legacy

        jmp client config use test-client-oidc

        jmp client create lease     --selector example.com/board=oidc --duration 1d
        jmp client get    leases
        jmp client get    exporters
        jmp client delete leases    --all

        jmp admin get client
        jmp admin get exporter
        jmp admin get lease

        jmp exporter run test-exporter-oidc &
        kubectl -n default wait --for=condition=Online exporters.jumpstarter.dev/test-exporter-oidc

        jmp client shell --client test-client-oidc --selector example.com/board=oidc <<EOF
        j power on
        EOF

        jmp client shell --client test-client-sa --selector example.com/board=sa <<EOF
        j power on
        EOF

        jmp client shell --client test-client-legacy --selector example.com/board=legacy <<EOF
        j power on
        EOF

        kubectl -n default get secret test-client-oidc-client
        kubectl -n default get secret test-exporter-oidc-exporter

        jmp admin delete client   test-client-oidc -d
        jmp admin delete exporter test-exporter-oidc -d

        ! kubectl -n default get secret test-client-oidc-client
        ! kubectl -n default get secret test-exporter-oidc-exporter
